<?php

/**
 * @file
 * Provides a cdp task entity type.
 */

use Drupal\Core\Form\FormStateInterface as FormStateInterfaceAlias;
use Drupal\Core\Render\Element;

/**
 * Implements hook_theme().
 */
function cdp_task_theme() {
  return [
    'cdp_task' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Prepares variables for cdp task templates.
 *
 * Default template: cdp-task.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the cdp task information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_cdp_task(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

function _cdp_task_get_role(){
  $roles = ['developer', 'tech_lead'];
  foreach ($roles as $role) {
    if (\Drupal\user\Entity\User::load(\Drupal::currentUser()->id())->hasRole($role)) {
      return $role;
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function cdp_task_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
  $data = Drupal::service('cdp_jira_api');
  $form['project']['widget']['#options'] = $data->getContent();
}
